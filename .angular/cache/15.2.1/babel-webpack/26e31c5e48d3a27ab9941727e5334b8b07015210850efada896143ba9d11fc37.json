{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction NavComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function NavComponent_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const _r2 = i0.ɵɵreference(2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.SendNavValue(_r2));\n    });\n    i0.ɵɵelement(1, \"img\", 3, 4);\n    i0.ɵɵelementStart(3, \"h3\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const e_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", e_r1.circle, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(e_r1.h);\n  }\n}\nexport class NavComponent {\n  constructor() {\n    //   nav = [\n    //     { circle: \"\", h: \"Show All\" },\n    //     { circle: \"assets/icons8-filled-circle-red.png\", h: \"work\" },\n    //     { circle: \"assets/icons8-filled-circle-green.png\", h: \"entertainment\" },\n    //     { circle: \"assets/icons8-filled-circle-pink.png\", h: \"family\" },\n    //     { circle: \"assets/icons8-filled-circle-blue.png\", h: \"study\" }\n    //   ]\n    //   ngOnInit() {\n    //   }\n    //   @Output()\n    //   navValue: EventEmitter<string> = new EventEmitter<string>();\n    //   @Output()\n    //   taskValue: EventEmitter<string> = new EventEmitter<string>();\n    //   @Output()\n    //   hideValue: EventEmitter<boolean> = new EventEmitter<boolean>();\n    //   SendNavValue(d: HTMLImageElement) {\n    //     let data = d.src;\n    //     this.navValue.emit(data.slice(22))\n    //      console.log(data);\n    //   }\n    //   searchTaskValue: string = '';\n    //   searchTask() {\n    //     this.taskValue.emit(this.searchTaskValue)\n    //   }\n    //   hideDoneTask(d: HTMLInputElement) {\n    //     let v: boolean = d.checked;\n    //     this.hideValue.emit(v)\n    //     console.log(v);\n    //   }\n    // }\n    this.nav = [{\n      circle: \"assets/icons8-white-circle-48.png\",\n      h: \"All\"\n    }, {\n      circle: \"assets/icons8-filled-circle-red.png\",\n      h: \"work\"\n    }, {\n      circle: \"assets/icons8-filled-circle-green.png\",\n      h: \"entertainment\"\n    }, {\n      circle: \"assets/icons8-filled-circle-pink.png\",\n      h: \"family\"\n    }, {\n      circle: \"assets/icons8-filled-circle-blue.png\",\n      h: \"study\"\n    }];\n    this.navValue = new EventEmitter();\n    this.taskValue = new EventEmitter();\n    this.hideValue = new EventEmitter();\n    this.searchTaskValue = '';\n  }\n  ngOnInit() {}\n  SendNavValue(d) {\n    let data = d.src;\n    this.navValue.emit(data.slice(22));\n    console.log(data);\n  }\n  searchTask() {\n    this.taskValue.emit(this.searchTaskValue);\n  }\n  hideDoneTask(d) {\n    let v = d.checked;\n    this.hideValue.emit(v);\n    console.log(v);\n  }\n}\nNavComponent.ɵfac = function NavComponent_Factory(t) {\n  return new (t || NavComponent)();\n};\nNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavComponent,\n  selectors: [[\"app-nav\"]],\n  outputs: {\n    navValue: \"navValue\",\n    taskValue: \"taskValue\",\n    hideValue: \"hideValue\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"d-flex\", \"flex-row\", \"flex-md-column\", \"fixed-top\", \"navmenu1\"], [\"class\", \"gap-1 my-1 d-flex flex-md-row mx-2 navmenu\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"gap-1\", \"my-1\", \"d-flex\", \"flex-md-row\", \"mx-2\", \"navmenu\", 3, \"click\"], [2, \"height\", \"20px\", 3, \"src\"], [\"myVariable\", \"\"], [2, \"font-family\", \"monospace\", \"font-size\", \"14px\"]],\n  template: function NavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NavComponent_div_1_Template, 5, 2, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nav);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\".navmenu[_ngcontent-%COMP%]{\\r\\n  position: sticky;\\r\\n  align-items: center;\\r\\n  padding: 5px;\\r\\n  height: -moz-fit-content;\\r\\n  height: fit-content;\\r\\n  border-radius:18px;\\r\\n  background-color: rgba(192, 192, 192,.1);\\r\\n }\\r\\n \\r\\n .navmenu[_ngcontent-%COMP%]:hover{\\r\\n     background-image: linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);\\r\\n     ;\\r\\n     color: white;\\r\\n     cursor: pointer;\\r\\n \\r\\n }\\r\\n .navmenu1[_ngcontent-%COMP%]{\\r\\n  background-color: #9a9ae1;\\r\\n     z-index: 1;\\r\\n     height:min-content;\\r\\n     top: 50px;\\r\\n     left: 0px;\\r\\n }\\r\\n input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] { display: none; } \\r\\n input[type=\\\"checkbox\\\"][_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\\r\\n   display: block;\\r\\n   position: relative;\\r\\n   padding-left: 35px;\\r\\n   margin-bottom: 20px;\\r\\n   font: 14px/20px 'Open Sans', Arial, sans-serif;\\r\\n   color: #0a0909;\\r\\n   cursor: pointer;\\r\\n }\\r\\n \\r\\n  input[type=\\\"checkbox\\\"][_ngcontent-%COMP%]    + label[_ngcontent-%COMP%]:last-child { margin-bottom: 0; }\\r\\n \\r\\n input[type=\\\"checkbox\\\"][_ngcontent-%COMP%]    + label[_ngcontent-%COMP%]:before {\\r\\n   content: '';\\r\\n   display: block;\\r\\n   width: 20px;\\r\\n   height: 20px;\\r\\n   border: 2px solid #0a0a0a;\\r\\n   position: absolute;\\r\\n   left: 0;\\r\\n   top: 0;\\r\\n   opacity: .6;\\r\\n   transition: all .12s, border-color .08s;\\r\\n }\\r\\n \\r\\n input[type=\\\"checkbox\\\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before {\\r\\n   width: 10px;\\r\\n   top: -5px;\\r\\n   left: 5px;\\r\\n   border-radius: 0;\\r\\n   opacity: 1;\\r\\n   border-top-color: transparent;\\r\\n   border-left-color: transparent;\\r\\n   transform: rotate(45deg);\\r\\n }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osd0JBQW1CO0VBQW5CLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsd0NBQXdDO0NBQ3pDOztDQUVBO0tBQ0ksMkpBQTJKOztLQUUzSixZQUFZO0tBQ1osZUFBZTs7Q0FFbkI7Q0FDQTtFQUNDLHlCQUF5QjtLQUN0QixVQUFVO0tBQ1Ysa0JBQWtCO0tBQ2xCLFNBQVM7S0FDVCxTQUFTO0NBQ2I7Q0FDQSx5QkFBeUIsYUFBYSxFQUFFO0NBQ3hDO0dBQ0UsY0FBYztHQUNkLGtCQUFrQjtHQUNsQixrQkFBa0I7R0FDbEIsbUJBQW1CO0dBQ25CLDhDQUE4QztHQUM5QyxjQUFjO0dBQ2QsZUFBZTtDQUNqQjs7RUFFQyw0Q0FBNEMsZ0JBQWdCLEVBQUU7O0NBRS9EO0dBQ0UsV0FBVztHQUNYLGNBQWM7R0FDZCxXQUFXO0dBQ1gsWUFBWTtHQUNaLHlCQUF5QjtHQUN6QixrQkFBa0I7R0FDbEIsT0FBTztHQUNQLE1BQU07R0FDTixXQUFXO0dBRVgsdUNBQXVDO0NBQ3pDOztDQUVBO0dBQ0UsV0FBVztHQUNYLFNBQVM7R0FDVCxTQUFTO0dBQ1QsZ0JBQWdCO0dBQ2hCLFVBQVU7R0FDViw2QkFBNkI7R0FDN0IsOEJBQThCO0dBRTlCLHdCQUF3QjtDQUMxQiIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZtZW51e1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcclxuICBib3JkZXItcmFkaXVzOjE4cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxOTIsIDE5MiwgMTkyLC4xKTtcclxuIH1cclxuIFxyXG4gLm5hdm1lbnU6aG92ZXJ7XHJcbiAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IHRvcCwgI2QxNmJhNSwgI2M3NzdiOSwgI2JhODNjYSwgI2FhOGZkOCwgIzlhOWFlMSwgIzhhYTdlYywgIzc5YjNmNCwgIzY5YmZmOCwgIzUyY2ZmZSwgIzQxZGZmZiwgIzQ2ZWVmYSwgIzVmZmJmMSk7XHJcbiAgICAgO1xyXG4gICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiBcclxuIH1cclxuIC5uYXZtZW51MXtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWE5YWUxO1xyXG4gICAgIHotaW5kZXg6IDE7XHJcbiAgICAgaGVpZ2h0Om1pbi1jb250ZW50O1xyXG4gICAgIHRvcDogNTBweDtcclxuICAgICBsZWZ0OiAwcHg7XHJcbiB9XHJcbiBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0geyBkaXNwbGF5OiBub25lOyB9IFxyXG4gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdICsgbGFiZWwge1xyXG4gICBkaXNwbGF5OiBibG9jaztcclxuICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICBwYWRkaW5nLWxlZnQ6IDM1cHg7XHJcbiAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgIGZvbnQ6IDE0cHgvMjBweCAnT3BlbiBTYW5zJywgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgIGNvbG9yOiAjMGEwOTA5O1xyXG4gICBjdXJzb3I6IHBvaW50ZXI7XHJcbiB9XHJcbiBcclxuICBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbDpsYXN0LWNoaWxkIHsgbWFyZ2luLWJvdHRvbTogMDsgfVxyXG4gXHJcbiBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbDpiZWZvcmUge1xyXG4gICBjb250ZW50OiAnJztcclxuICAgZGlzcGxheTogYmxvY2s7XHJcbiAgIHdpZHRoOiAyMHB4O1xyXG4gICBoZWlnaHQ6IDIwcHg7XHJcbiAgIGJvcmRlcjogMnB4IHNvbGlkICMwYTBhMGE7XHJcbiAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgbGVmdDogMDtcclxuICAgdG9wOiAwO1xyXG4gICBvcGFjaXR5OiAuNjtcclxuICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjEycywgYm9yZGVyLWNvbG9yIC4wOHM7XHJcbiAgIHRyYW5zaXRpb246IGFsbCAuMTJzLCBib3JkZXItY29sb3IgLjA4cztcclxuIH1cclxuIFxyXG4gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xyXG4gICB3aWR0aDogMTBweDtcclxuICAgdG9wOiAtNXB4O1xyXG4gICBsZWZ0OiA1cHg7XHJcbiAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgIG9wYWNpdHk6IDE7XHJcbiAgIGJvcmRlci10b3AtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiB9XHJcblxyXG4gXHJcbiBcclxuIFxyXG4gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAgCA,YAAY,QAAwB,eAAe;;;;;;ICC/EC,8BAAiH;IAAnCA;MAAAA;MAAA;MAAA;MAAA,OAASA,uCAAwB;IAAA,EAAC;IAC5GA,4BAAuD;IACvDA,6BAAkD;IAAAA,YAAO;IAAAA,iBAAK;;;;IADxBA,eAAgB;IAAhBA,8DAAgB;IACJA,eAAO;IAAPA,4BAAO;;;ADIjE,OAAM,MAAOC,YAAY;EALzBC;IASA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IAEA;IACA;IACA,QAAG,GAAG,CACJ;MAAEC,MAAM,EAAE,mCAAmC;MAAEC,CAAC,EAAE;IAAK,CAAE,EACzD;MAAED,MAAM,EAAE,qCAAqC;MAAEC,CAAC,EAAE;IAAM,CAAE,EAC5D;MAAED,MAAM,EAAE,uCAAuC;MAAEC,CAAC,EAAE;IAAe,CAAE,EACvE;MAAED,MAAM,EAAE,sCAAsC;MAAEC,CAAC,EAAE;IAAQ,CAAE,EAC/D;MAAED,MAAM,EAAE,sCAAsC;MAAEC,CAAC,EAAE;IAAO,CAAE,CAC/D;IAKD,aAAQ,GAAyB,IAAIL,YAAY,EAAU;IAE3D,cAAS,GAAyB,IAAIA,YAAY,EAAU;IAE5D,cAAS,GAA0B,IAAIA,YAAY,EAAW;IAS9D,oBAAe,GAAW,EAAE;;EAhB5BM,QAAQ,IACR;EAQAC,YAAY,CAACC,CAAmB;IAC9B,IAAIC,IAAI,GAAGD,CAAC,CAACE,GAAG;IAChB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC,EAAE,CAAC,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EAEpB;EAGAO,UAAU;IACR,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,IAAI,CAACM,eAAe,CAAC;EAC3C;EAGAC,YAAY,CAACX,CAAmB;IAC9B,IAAIY,CAAC,GAAYZ,CAAC,CAACa,OAAO;IAC1B,IAAI,CAACC,SAAS,CAACV,IAAI,CAACQ,CAAC,CAAC;IACtBN,OAAO,CAACC,GAAG,CAACK,CAAC,CAAC;EAEhB;;AA5EalB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAqB;EAAAC;IAAAb;IAAAM;IAAAK;EAAA;EAAAG;EAAAC;EAAAC;EAAAC;IAAA;MCPzB3B,8BAAgE;MAC5DA,6DAGM;MAaVA,iBAAM;;;MAhBoEA,eAAM;MAANA,iCAAM","names":["EventEmitter","i0","NavComponent","constructor","circle","h","ngOnInit","SendNavValue","d","data","src","navValue","emit","slice","console","log","searchTask","taskValue","searchTaskValue","hideDoneTask","v","checked","hideValue","selectors","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\admin\\Desktop\\TODO-LIST\\Time\\app\\src\\app\\nav\\nav.component.ts","C:\\Users\\admin\\Desktop\\TODO-LIST\\Time\\app\\src\\app\\nav\\nav.component.html"],"sourcesContent":["import { Component, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n\n\n//   nav = [\n//     { circle: \"\", h: \"Show All\" },\n//     { circle: \"assets/icons8-filled-circle-red.png\", h: \"work\" },\n//     { circle: \"assets/icons8-filled-circle-green.png\", h: \"entertainment\" },\n//     { circle: \"assets/icons8-filled-circle-pink.png\", h: \"family\" },\n//     { circle: \"assets/icons8-filled-circle-blue.png\", h: \"study\" }\n//   ]\n\n//   ngOnInit() {\n//   }\n//   @Output()\n//   navValue: EventEmitter<string> = new EventEmitter<string>();\n//   @Output()\n//   taskValue: EventEmitter<string> = new EventEmitter<string>();\n//   @Output()\n//   hideValue: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n//   SendNavValue(d: HTMLImageElement) {\n//     let data = d.src;\n//     this.navValue.emit(data.slice(22))\n//      console.log(data);\n\n//   }\n\n//   searchTaskValue: string = '';\n//   searchTask() {\n//     this.taskValue.emit(this.searchTaskValue)\n//   }\n\n\n//   hideDoneTask(d: HTMLInputElement) {\n//     let v: boolean = d.checked;\n//     this.hideValue.emit(v)\n//     console.log(v);\n\n//   }\n// }\nnav = [\n  { circle: \"assets/icons8-white-circle-48.png\", h: \"All\" },\n  { circle: \"assets/icons8-filled-circle-red.png\", h: \"work\" },\n  { circle: \"assets/icons8-filled-circle-green.png\", h: \"entertainment\" },\n  { circle: \"assets/icons8-filled-circle-pink.png\", h: \"family\" },\n  { circle: \"assets/icons8-filled-circle-blue.png\", h: \"study\" }\n]\n\nngOnInit() {\n}\n@Output()\nnavValue: EventEmitter<string> = new EventEmitter<string>();\n@Output()\ntaskValue: EventEmitter<string> = new EventEmitter<string>();\n@Output()\nhideValue: EventEmitter<boolean> = new EventEmitter<boolean>();\n\nSendNavValue(d: HTMLImageElement) {\n  let data = d.src;\n  this.navValue.emit(data.slice(22))\n   console.log(data);\n\n}\n\nsearchTaskValue: string = '';\nsearchTask() {\n  this.taskValue.emit(this.searchTaskValue)\n}\n\n\nhideDoneTask(d: HTMLInputElement) {\n  let v: boolean = d.checked;\n  this.hideValue.emit(v)\n  console.log(v);\n\n}\n}\n\n","<div class=\"d-flex flex-row flex-md-column fixed-top  navmenu1\">\n    <div class=\"gap-1 my-1 d-flex flex-md-row mx-2 navmenu\" *ngFor=\"let e of nav\" (click)=\"SendNavValue(myVariable)\">\n        <img #myVariable style=\"height:20px;\" src={{e.circle}}>\n        <h3 style=\"font-family:monospace;font-size:14px;\">{{e.h}}</h3>\n    </div>\n\n    <!-- <div class=\"search d-flex   flex-row flex-sm-column\">\n        <div class=\"mx-3 my-3\">\n            <input type=\"text\" placeholder=\"Search Task\" [(ngModel)]=\"searchTaskValue\" (input)=\"searchTask()\">\n        </div>\n\n        <div class=\"d-flex gap-3  my-3 align-items-center mx-3\">\n            <input #hide type=\"checkbox\" class=\"hide\" id=\"allcheck\" (change)=\"hideDoneTask(hide)\">\n            <label for=\"allcheck\">Hide done tasks</label>\n        </div>\n    </div> -->\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}