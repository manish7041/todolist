{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction NavComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function NavComponent_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const _r3 = i0.ɵɵreference(2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.SendNavValue(_r3));\n    });\n    i0.ɵɵelement(1, \"img\", 9, 10);\n    i0.ɵɵelementStart(3, \"h3\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const e_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", e_r2.circle, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(e_r2.h);\n  }\n}\nexport class NavComponent {\n  constructor() {\n    this.nav = [{\n      circle: \"assets/icons8-filled-circle-red.png\",\n      h: \"work\"\n    }, {\n      circle: \"assets/icons8-filled-circle-green.png\",\n      h: \"entertainment\"\n    }, {\n      circle: \"assets/icons8-filled-circle-pink.png\",\n      h: \"family\"\n    }, {\n      circle: \"assets/icons8-filled-circle-blue.png\",\n      h: \"study\"\n    }];\n    this.navValue = new EventEmitter();\n    this.taskValue = new EventEmitter();\n    this.hideValue = new EventEmitter();\n    this.searchTaskValue = '';\n    this.hide = false;\n  }\n  ngOnInit() {}\n  SendNavValue(d) {\n    let data = d.src;\n    this.navValue.emit(data.slice(22));\n    console.log(data);\n  }\n  searchTask() {\n    this.taskValue.emit(this.searchTaskValue);\n  }\n  hideDoneTask(d) {\n    let v = d.checked;\n    this.hideValue.emit(v);\n    console.log(v);\n  }\n}\nNavComponent.ɵfac = function NavComponent_Factory(t) {\n  return new (t || NavComponent)();\n};\nNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavComponent,\n  selectors: [[\"app-nav\"]],\n  outputs: {\n    navValue: \"navValue\",\n    taskValue: \"taskValue\",\n    hideValue: \"hideValue\"\n  },\n  decls: 9,\n  vars: 3,\n  consts: [[1, \"col-12\", \"navmenu1\", \"fixed-top\"], [\"class\", \"gap-2 my-4 d-flex mx-2 navmenu\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mx-3\"], [\"type\", \"text\", \"placeholder\", \"Search Task\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"d-flex\", \"gap-3\", \"my-3\", \"align-items-center\", \"mx-3\"], [\"type\", \"checkbox\", \"[\", \"allcheck\", 1, \"hide\", 3, \"checked\", \"change\"], [\"hide\", \"\"], [\"for\", \"allcheck\"], [1, \"gap-2\", \"my-4\", \"d-flex\", \"mx-2\", \"navmenu\", 3, \"click\"], [1, \"\", 2, \"height\", \"32px\", 3, \"src\"], [\"myVariable\", \"\"], [2, \"font-family\", \"monospace\", \"font-size\", \"20px\"]],\n  template: function NavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NavComponent_div_1_Template, 5, 2, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function NavComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.searchTaskValue = $event;\n      })(\"input\", function NavComponent_Template_input_input_3_listener() {\n        return ctx.searchTask();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"input\", 5, 6);\n      i0.ɵɵlistener(\"change\", function NavComponent_Template_input_change_5_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r1 = i0.ɵɵreference(6);\n        return i0.ɵɵresetView(ctx.hideDoneTask(_r1));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 7);\n      i0.ɵɵtext(8, \"Hide done tasks\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(6);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nav);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchTaskValue);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", _r1);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\".navmenu[_ngcontent-%COMP%]:hover{\\r\\n    border-radius: 20px solid black;\\r\\n    background-image: linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);\\r\\n    ;\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n\\r\\n}\\r\\n.navmenu1[_ngcontent-%COMP%]{\\r\\n    position:sticky;\\r\\n    z-index: 1;\\r\\n    top: 100px;\\r\\n}\\r\\ninput[type=\\\"checkbox\\\"][_ngcontent-%COMP%] { display: none; } \\r\\ninput[type=\\\"checkbox\\\"][_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  position: relative;\\r\\n  padding-left: 35px;\\r\\n  margin-bottom: 20px;\\r\\n  font: 14px/20px 'Open Sans', Arial, sans-serif;\\r\\n  color: #0a0909;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n input[type=\\\"checkbox\\\"][_ngcontent-%COMP%]    + label[_ngcontent-%COMP%]:last-child { margin-bottom: 0; }\\r\\n\\r\\ninput[type=\\\"checkbox\\\"][_ngcontent-%COMP%]    + label[_ngcontent-%COMP%]:before {\\r\\n  content: '';\\r\\n  display: block;\\r\\n  width: 20px;\\r\\n  height: 20px;\\r\\n  border: 2px solid #0a0a0a;\\r\\n  position: absolute;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  opacity: .6;\\r\\n  transition: all .12s, border-color .08s;\\r\\n}\\r\\n\\r\\ninput[type=\\\"checkbox\\\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before {\\r\\n  width: 10px;\\r\\n  top: -5px;\\r\\n  left: 5px;\\r\\n  border-radius: 0;\\r\\n  opacity: 1;\\r\\n  border-top-color: transparent;\\r\\n  border-left-color: transparent;\\r\\n  transform: rotate(45deg);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksK0JBQStCO0lBQy9CLDJKQUEySjs7SUFFM0osWUFBWTtJQUNaLGVBQWU7O0FBRW5CO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsVUFBVTtJQUNWLFVBQVU7QUFDZDtBQUNBLHlCQUF5QixhQUFhLEVBQUU7QUFDeEM7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsOENBQThDO0VBQzlDLGNBQWM7RUFDZCxlQUFlO0FBQ2pCOztDQUVDLDRDQUE0QyxnQkFBZ0IsRUFBRTs7QUFFL0Q7RUFDRSxXQUFXO0VBQ1gsY0FBYztFQUNkLFdBQVc7RUFDWCxZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1AsTUFBTTtFQUNOLFdBQVc7RUFFWCx1Q0FBdUM7QUFDekM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsU0FBUztFQUNULFNBQVM7RUFDVCxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLDZCQUE2QjtFQUM3Qiw4QkFBOEI7RUFFOUIsd0JBQXdCO0FBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdm1lbnU6aG92ZXJ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4IHNvbGlkIGJsYWNrO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IHRvcCwgI2QxNmJhNSwgI2M3NzdiOSwgI2JhODNjYSwgI2FhOGZkOCwgIzlhOWFlMSwgIzhhYTdlYywgIzc5YjNmNCwgIzY5YmZmOCwgIzUyY2ZmZSwgIzQxZGZmZiwgIzQ2ZWVmYSwgIzVmZmJmMSk7XHJcbiAgICA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG59XHJcbi5uYXZtZW51MXtcclxuICAgIHBvc2l0aW9uOnN0aWNreTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICB0b3A6IDEwMHB4O1xyXG59XHJcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7IGRpc3BsYXk6IG5vbmU7IH0gXHJcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSArIGxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgcGFkZGluZy1sZWZ0OiAzNXB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgZm9udDogMTRweC8yMHB4ICdPcGVuIFNhbnMnLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICBjb2xvcjogIzBhMDkwOTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbiBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbDpsYXN0LWNoaWxkIHsgbWFyZ2luLWJvdHRvbTogMDsgfVxyXG5cclxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdICsgbGFiZWw6YmVmb3JlIHtcclxuICBjb250ZW50OiAnJztcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgIzBhMGEwYTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogMDtcclxuICB0b3A6IDA7XHJcbiAgb3BhY2l0eTogLjY7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjEycywgYm9yZGVyLWNvbG9yIC4wOHM7XHJcbiAgdHJhbnNpdGlvbjogYWxsIC4xMnMsIGJvcmRlci1jb2xvciAuMDhzO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZCArIGxhYmVsOmJlZm9yZSB7XHJcbiAgd2lkdGg6IDEwcHg7XHJcbiAgdG9wOiAtNXB4O1xyXG4gIGxlZnQ6IDVweDtcclxuICBib3JkZXItcmFkaXVzOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyLWxlZnQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxufVxyXG5cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAgCA,YAAY,QAAwB,eAAe;;;;;;;ICCnFC,8BAAqG;IAAnCA;MAAAA;MAAA;MAAA;MAAA,OAASA,uCAAwB;IAAA,EAAC;IAChGA,6BAAgE;IAChEA,8BAAoD;IAAAA,YAAO;IAAAA,iBAAK;;;;IADjBA,eAAgB;IAAhBA,8DAAgB;IACXA,eAAO;IAAPA,4BAAO;;;ADI/D,OAAM,MAAOC,YAAY;EALzBC;IASE,QAAG,GAAE,CACH;MAACC,MAAM,EAAC,qCAAqC;MAAEC,CAAC,EAAC;IAAM,CAAC,EACxD;MAACD,MAAM,EAAC,uCAAuC;MAAEC,CAAC,EAAC;IAAe,CAAC,EACnE;MAACD,MAAM,EAAC,sCAAsC;MAAEC,CAAC,EAAC;IAAQ,CAAC,EAC3D;MAACD,MAAM,EAAC,sCAAsC;MAAEC,CAAC,EAAC;IAAO,CAAC,CAC3D;IAKF,aAAQ,GAAwB,IAAIL,YAAY,EAAU;IAE1D,cAAS,GAAwB,IAAIA,YAAY,EAAU;IAE3D,cAAS,GAAyB,IAAIA,YAAY,EAAW;IAS7D,oBAAe,GAAS,EAAE;IAK3B,SAAI,GAAU,KAAK;;EArBlBM,QAAQ,IACR;EAQAC,YAAY,CAACC,CAAkB;IAC9B,IAAIC,IAAI,GAAGD,CAAC,CAACE,GAAG;IACjB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC,EAAE,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EAEjB;EAGAO,UAAU;IACV,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,IAAI,CAACM,eAAe,CAAC;EACzC;EAGAC,YAAY,CAACX,CAAkB;IAChC,IAAIY,CAAC,GAAWZ,CAAC,CAACa,OAAO;IACzB,IAAI,CAACC,SAAS,CAACV,IAAI,CAACQ,CAAC,CAAC;IACtBN,OAAO,CAACC,GAAG,CAACK,CAAC,CAAC;EAEb;;AAtCYlB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAqB;EAAAC;IAAAb;IAAAM;IAAAK;EAAA;EAAAG;EAAAC;EAAAC;EAAAC;IAAA;;MCPzB3B,8BAAwC;MACxCA,6DAGM;MACNA,8BAAkB;MAC+BA;QAAA;MAAA,EAA6B;QAAA,OAAU4B,gBAAY;MAAA,EAAtB;MAA1E5B,iBAAkG;MAGtGA,8BAAuD;MACsBA;QAAAA;QAAA;QAAA,OAAUA,oCAAkB;MAAA,EAAC;MAAtGA,iBAAuG;MACvGA,gCAAsB;MAAAA,+BAAe;MAAAA,iBAAQ;;;;MAVSA,eAAM;MAANA,iCAAM;MAKfA,eAA6B;MAA7BA,6CAA6B;MAI/BA,eAAgB;MAAhBA,6BAAgB","names":["EventEmitter","i0","NavComponent","constructor","circle","h","ngOnInit","SendNavValue","d","data","src","navValue","emit","slice","console","log","searchTask","taskValue","searchTaskValue","hideDoneTask","v","checked","hideValue","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\admin\\Desktop\\TODO-LIST\\Time\\app\\src\\app\\nav\\nav.component.ts","C:\\Users\\admin\\Desktop\\TODO-LIST\\Time\\app\\src\\app\\nav\\nav.component.html"],"sourcesContent":["import { Component, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n\n\n  nav =[\n    {circle:\"assets/icons8-filled-circle-red.png\", h:\"work\"},\n    {circle:\"assets/icons8-filled-circle-green.png\", h:\"entertainment\"},\n    {circle:\"assets/icons8-filled-circle-pink.png\", h:\"family\"},\n    {circle:\"assets/icons8-filled-circle-blue.png\", h:\"study\"}\n  ]\n\n ngOnInit(){\n }\n @Output()\n navValue:EventEmitter<string> = new EventEmitter<string>();\n @Output()\n taskValue:EventEmitter<string> = new EventEmitter<string>();\n @Output()\n hideValue:EventEmitter<boolean> = new EventEmitter<boolean>();\n\n SendNavValue(d:HTMLImageElement){\n  let data = d.src;\n this.navValue.emit(data.slice(22))\n console.log(data);\n \n }\n\n searchTaskValue:string ='';\n searchTask(){\n this.taskValue.emit(this.searchTaskValue)\n }\n\nhide:boolean= false;\n hideDoneTask(d:HTMLInputElement){\nlet v:boolean = d.checked;\nthis.hideValue.emit(v)\nconsole.log(v);\n\n }\n}\n","<div class=\"col-12  navmenu1 fixed-top\">\n<div class=\"gap-2 my-4 d-flex mx-2 navmenu\" *ngFor=\"let e of nav\" (click)=\"SendNavValue(myVariable)\">\n    <img #myVariable class=\"\" style=\"height:32px;\" src={{e.circle}}>\n    <h3  style=\"font-family:monospace;font-size:20px;\" >{{e.h}}</h3>\n</div>\n<div class=\"mx-3\">\n    <input type=\"text\" placeholder=\"Search Task\" [(ngModel)]=\"searchTaskValue\" (input)=\"searchTask()\">\n</div>\n\n<div class=\"d-flex gap-3 my-3 align-items-center mx-3\">\n    <input #hide type=\"checkbox\"  class=\"hide\" [checked]=\"hide\" [=\"allcheck\" (change)=\"hideDoneTask(hide)\">\n    <label for=\"allcheck\">Hide done tasks</label>\n\n\n</div>\n</div>\n\n<!-- <div>\n    <img class=\"img-fluid\" src=\"assets/boy.png\" style=\"height:300px;\" >\n</div> -->\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}