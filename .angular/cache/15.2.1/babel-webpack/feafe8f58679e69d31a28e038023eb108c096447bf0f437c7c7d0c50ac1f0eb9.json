{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction NavComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"click\", function NavComponent_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const _r3 = i0.ɵɵreference(2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.SendNavValue(_r3));\n    });\n    i0.ɵɵelement(1, \"img\", 10, 11);\n    i0.ɵɵelementStart(3, \"h3\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const e_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", e_r2.circle, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(e_r2.h);\n  }\n}\nexport class NavComponent {\n  constructor() {\n    //   nav = [\n    //     { circle: \"\", h: \"Show All\" },\n    //     { circle: \"assets/icons8-filled-circle-red.png\", h: \"work\" },\n    //     { circle: \"assets/icons8-filled-circle-green.png\", h: \"entertainment\" },\n    //     { circle: \"assets/icons8-filled-circle-pink.png\", h: \"family\" },\n    //     { circle: \"assets/icons8-filled-circle-blue.png\", h: \"study\" }\n    //   ]\n    //   ngOnInit() {\n    //   }\n    //   @Output()\n    //   navValue: EventEmitter<string> = new EventEmitter<string>();\n    //   @Output()\n    //   taskValue: EventEmitter<string> = new EventEmitter<string>();\n    //   @Output()\n    //   hideValue: EventEmitter<boolean> = new EventEmitter<boolean>();\n    //   SendNavValue(d: HTMLImageElement) {\n    //     let data = d.src;\n    //     this.navValue.emit(data.slice(22))\n    //      console.log(data);\n    //   }\n    //   searchTaskValue: string = '';\n    //   searchTask() {\n    //     this.taskValue.emit(this.searchTaskValue)\n    //   }\n    //   hideDoneTask(d: HTMLInputElement) {\n    //     let v: boolean = d.checked;\n    //     this.hideValue.emit(v)\n    //     console.log(v);\n    //   }\n    // }\n    this.nav = [{\n      circle: \"assets/icons8-white-circle-48.png\",\n      h: \"All\"\n    }, {\n      circle: \"assets/icons8-filled-circle-red.png\",\n      h: \"work\"\n    }, {\n      circle: \"assets/icons8-filled-circle-green.png\",\n      h: \"entertainment\"\n    }, {\n      circle: \"assets/icons8-filled-circle-pink.png\",\n      h: \"family\"\n    }, {\n      circle: \"assets/icons8-filled-circle-blue.png\",\n      h: \"study\"\n    }];\n    this.navValue = new EventEmitter();\n    this.taskValue = new EventEmitter();\n    this.hideValue = new EventEmitter();\n    this.searchTaskValue = '';\n  }\n  ngOnInit() {}\n  SendNavValue(d) {\n    let data = d.src;\n    this.navValue.emit(data.slice(22));\n    console.log(data);\n  }\n  searchTask() {\n    this.taskValue.emit(this.searchTaskValue);\n  }\n  hideDoneTask(d) {\n    let v = d.checked;\n    this.hideValue.emit(v);\n    console.log(v);\n  }\n}\nNavComponent.ɵfac = function NavComponent_Factory(t) {\n  return new (t || NavComponent)();\n};\nNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavComponent,\n  selectors: [[\"app-nav\"]],\n  outputs: {\n    navValue: \"navValue\",\n    taskValue: \"taskValue\",\n    hideValue: \"hideValue\"\n  },\n  decls: 10,\n  vars: 2,\n  consts: [[1, \"d-flex\", \"flex-row\", \"flex-md-column\", \"navmenu1\"], [\"class\", \"gap-2 my-1 d-flex  mx-2 navmenu\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"\"], [1, \"mx-3\", \"my-3\"], [\"type\", \"text\", \"placeholder\", \"Search Task\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"d-flex\", \"gap-3\", \"my-3\", \"align-items-center\", \"mx-3\"], [\"type\", \"checkbox\", \"id\", \"allcheck\", 1, \"hide\", 3, \"change\"], [\"hide\", \"\"], [\"for\", \"allcheck\"], [1, \"gap-2\", \"my-1\", \"d-flex\", \"mx-2\", \"navmenu\", 3, \"click\"], [2, \"height\", \"20px\", 3, \"src\"], [\"myVariable\", \"\"], [2, \"font-family\", \"monospace\", \"font-size\", \"14px\"]],\n  template: function NavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NavComponent_div_1_Template, 5, 2, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function NavComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.searchTaskValue = $event;\n      })(\"input\", function NavComponent_Template_input_input_4_listener() {\n        return ctx.searchTask();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"input\", 6, 7);\n      i0.ɵɵlistener(\"change\", function NavComponent_Template_input_change_6_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r1 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.hideDoneTask(_r1));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\", 8);\n      i0.ɵɵtext(9, \"Hide done tasks\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nav);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchTaskValue);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\".navmenu[_ngcontent-%COMP%]{\\r\\n  position: relative;\\r\\n  align-items: center;\\r\\n  padding: 5px;\\r\\n  height: -moz-fit-content;\\r\\n  height: fit-content;\\r\\n  border-radius:18px;\\r\\n  background-color: rgba(192, 192, 192,.1);\\r\\n }\\r\\n \\r\\n .navmenu[_ngcontent-%COMP%]:hover{\\r\\n     background-image: linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);\\r\\n     ;\\r\\n     color: white;\\r\\n     cursor: pointer;\\r\\n \\r\\n }\\r\\n .navmenu1[_ngcontent-%COMP%]{\\r\\n     position:sticky;\\r\\n     z-index: 1;\\r\\n     top: 50px;\\r\\n     left: 0px;\\r\\n }\\r\\n input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] { display: none; } \\r\\n input[type=\\\"checkbox\\\"][_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\\r\\n   display: block;\\r\\n   position: relative;\\r\\n   padding-left: 35px;\\r\\n   margin-bottom: 20px;\\r\\n   font: 14px/20px 'Open Sans', Arial, sans-serif;\\r\\n   color: #0a0909;\\r\\n   cursor: pointer;\\r\\n }\\r\\n \\r\\n  input[type=\\\"checkbox\\\"][_ngcontent-%COMP%]    + label[_ngcontent-%COMP%]:last-child { margin-bottom: 0; }\\r\\n \\r\\n input[type=\\\"checkbox\\\"][_ngcontent-%COMP%]    + label[_ngcontent-%COMP%]:before {\\r\\n   content: '';\\r\\n   display: block;\\r\\n   width: 20px;\\r\\n   height: 20px;\\r\\n   border: 2px solid #0a0a0a;\\r\\n   position: absolute;\\r\\n   left: 0;\\r\\n   top: 0;\\r\\n   opacity: .6;\\r\\n   transition: all .12s, border-color .08s;\\r\\n }\\r\\n \\r\\n input[type=\\\"checkbox\\\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before {\\r\\n   width: 10px;\\r\\n   top: -5px;\\r\\n   left: 5px;\\r\\n   border-radius: 0;\\r\\n   opacity: 1;\\r\\n   border-top-color: transparent;\\r\\n   border-left-color: transparent;\\r\\n   transform: rotate(45deg);\\r\\n }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osd0JBQW1CO0VBQW5CLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsd0NBQXdDO0NBQ3pDOztDQUVBO0tBQ0ksMkpBQTJKOztLQUUzSixZQUFZO0tBQ1osZUFBZTs7Q0FFbkI7Q0FDQTtLQUNJLGVBQWU7S0FDZixVQUFVO0tBQ1YsU0FBUztLQUNULFNBQVM7Q0FDYjtDQUNBLHlCQUF5QixhQUFhLEVBQUU7Q0FDeEM7R0FDRSxjQUFjO0dBQ2Qsa0JBQWtCO0dBQ2xCLGtCQUFrQjtHQUNsQixtQkFBbUI7R0FDbkIsOENBQThDO0dBQzlDLGNBQWM7R0FDZCxlQUFlO0NBQ2pCOztFQUVDLDRDQUE0QyxnQkFBZ0IsRUFBRTs7Q0FFL0Q7R0FDRSxXQUFXO0dBQ1gsY0FBYztHQUNkLFdBQVc7R0FDWCxZQUFZO0dBQ1oseUJBQXlCO0dBQ3pCLGtCQUFrQjtHQUNsQixPQUFPO0dBQ1AsTUFBTTtHQUNOLFdBQVc7R0FFWCx1Q0FBdUM7Q0FDekM7O0NBRUE7R0FDRSxXQUFXO0dBQ1gsU0FBUztHQUNULFNBQVM7R0FDVCxnQkFBZ0I7R0FDaEIsVUFBVTtHQUNWLDZCQUE2QjtHQUM3Qiw4QkFBOEI7R0FFOUIsd0JBQXdCO0NBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdm1lbnV7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogNXB4O1xyXG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XHJcbiAgYm9yZGVyLXJhZGl1czoxOHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTkyLCAxOTIsIDE5MiwuMSk7XHJcbiB9XHJcbiBcclxuIC5uYXZtZW51OmhvdmVye1xyXG4gICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCB0b3AsICNkMTZiYTUsICNjNzc3YjksICNiYTgzY2EsICNhYThmZDgsICM5YTlhZTEsICM4YWE3ZWMsICM3OWIzZjQsICM2OWJmZjgsICM1MmNmZmUsICM0MWRmZmYsICM0NmVlZmEsICM1ZmZiZjEpO1xyXG4gICAgIDtcclxuICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gXHJcbiB9XHJcbiAubmF2bWVudTF7XHJcbiAgICAgcG9zaXRpb246c3RpY2t5O1xyXG4gICAgIHotaW5kZXg6IDE7XHJcbiAgICAgdG9wOiA1MHB4O1xyXG4gICAgIGxlZnQ6IDBweDtcclxuIH1cclxuIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7IGRpc3BsYXk6IG5vbmU7IH0gXHJcbiBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbCB7XHJcbiAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgIHBhZGRpbmctbGVmdDogMzVweDtcclxuICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgZm9udDogMTRweC8yMHB4ICdPcGVuIFNhbnMnLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICAgY29sb3I6ICMwYTA5MDk7XHJcbiAgIGN1cnNvcjogcG9pbnRlcjtcclxuIH1cclxuIFxyXG4gIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSArIGxhYmVsOmxhc3QtY2hpbGQgeyBtYXJnaW4tYm90dG9tOiAwOyB9XHJcbiBcclxuIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSArIGxhYmVsOmJlZm9yZSB7XHJcbiAgIGNvbnRlbnQ6ICcnO1xyXG4gICBkaXNwbGF5OiBibG9jaztcclxuICAgd2lkdGg6IDIwcHg7XHJcbiAgIGhlaWdodDogMjBweDtcclxuICAgYm9yZGVyOiAycHggc29saWQgIzBhMGEwYTtcclxuICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICBsZWZ0OiAwO1xyXG4gICB0b3A6IDA7XHJcbiAgIG9wYWNpdHk6IC42O1xyXG4gICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuMTJzLCBib3JkZXItY29sb3IgLjA4cztcclxuICAgdHJhbnNpdGlvbjogYWxsIC4xMnMsIGJvcmRlci1jb2xvciAuMDhzO1xyXG4gfVxyXG4gXHJcbiBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZCArIGxhYmVsOmJlZm9yZSB7XHJcbiAgIHdpZHRoOiAxMHB4O1xyXG4gICB0b3A6IC01cHg7XHJcbiAgIGxlZnQ6IDVweDtcclxuICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgb3BhY2l0eTogMTtcclxuICAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgIGJvcmRlci1sZWZ0LWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuIH1cclxuIFxyXG4gXHJcbiBcclxuICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAgCA,YAAY,QAAwB,eAAe;;;;;;;ICC/EC,8BAAsG;IAAnCA;MAAAA;MAAA;MAAA;MAAA,OAASA,uCAAwB;IAAA,EAAC;IACjGA,8BAAuD;IACvDA,8BAAkD;IAAAA,YAAO;IAAAA,iBAAK;;;;IADxBA,eAAgB;IAAhBA,8DAAgB;IACJA,eAAO;IAAPA,4BAAO;;;ADIjE,OAAM,MAAOC,YAAY;EALzBC;IASA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IAEA;IACA;IACA,QAAG,GAAG,CACJ;MAAEC,MAAM,EAAE,mCAAmC;MAAEC,CAAC,EAAE;IAAK,CAAE,EACzD;MAAED,MAAM,EAAE,qCAAqC;MAAEC,CAAC,EAAE;IAAM,CAAE,EAC5D;MAAED,MAAM,EAAE,uCAAuC;MAAEC,CAAC,EAAE;IAAe,CAAE,EACvE;MAAED,MAAM,EAAE,sCAAsC;MAAEC,CAAC,EAAE;IAAQ,CAAE,EAC/D;MAAED,MAAM,EAAE,sCAAsC;MAAEC,CAAC,EAAE;IAAO,CAAE,CAC/D;IAKD,aAAQ,GAAyB,IAAIL,YAAY,EAAU;IAE3D,cAAS,GAAyB,IAAIA,YAAY,EAAU;IAE5D,cAAS,GAA0B,IAAIA,YAAY,EAAW;IAS9D,oBAAe,GAAW,EAAE;;EAhB5BM,QAAQ,IACR;EAQAC,YAAY,CAACC,CAAmB;IAC9B,IAAIC,IAAI,GAAGD,CAAC,CAACE,GAAG;IAChB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC,EAAE,CAAC,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EAEpB;EAGAO,UAAU;IACR,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,IAAI,CAACM,eAAe,CAAC;EAC3C;EAGAC,YAAY,CAACX,CAAmB;IAC9B,IAAIY,CAAC,GAAYZ,CAAC,CAACa,OAAO;IAC1B,IAAI,CAACC,SAAS,CAACV,IAAI,CAACQ,CAAC,CAAC;IACtBN,OAAO,CAACC,GAAG,CAACK,CAAC,CAAC;EAEhB;;AA5EalB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAqB;EAAAC;IAAAb;IAAAM;IAAAK;EAAA;EAAAG;EAAAC;EAAAC;EAAAC;IAAA;;MCPzB3B,8BAAqD;MACjDA,6DAGM;MAENA,8BAAc;MAEuCA;QAAA;MAAA,EAA6B;QAAA,OAAU4B,gBAAY;MAAA,EAAtB;MAA1E5B,iBAAkG;MAGtGA,8BAAuD;MACKA;QAAAA;QAAA;QAAA,OAAUA,oCAAkB;MAAA,EAAC;MAArFA,iBAAsF;MACtFA,gCAAsB;MAAAA,+BAAe;MAAAA,iBAAQ;;;MAZMA,eAAM;MAANA,iCAAM;MAOZA,eAA6B;MAA7BA,6CAA6B","names":["EventEmitter","i0","NavComponent","constructor","circle","h","ngOnInit","SendNavValue","d","data","src","navValue","emit","slice","console","log","searchTask","taskValue","searchTaskValue","hideDoneTask","v","checked","hideValue","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\admin\\Desktop\\TODO-LIST\\Time\\app\\src\\app\\nav\\nav.component.ts","C:\\Users\\admin\\Desktop\\TODO-LIST\\Time\\app\\src\\app\\nav\\nav.component.html"],"sourcesContent":["import { Component, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n\n\n//   nav = [\n//     { circle: \"\", h: \"Show All\" },\n//     { circle: \"assets/icons8-filled-circle-red.png\", h: \"work\" },\n//     { circle: \"assets/icons8-filled-circle-green.png\", h: \"entertainment\" },\n//     { circle: \"assets/icons8-filled-circle-pink.png\", h: \"family\" },\n//     { circle: \"assets/icons8-filled-circle-blue.png\", h: \"study\" }\n//   ]\n\n//   ngOnInit() {\n//   }\n//   @Output()\n//   navValue: EventEmitter<string> = new EventEmitter<string>();\n//   @Output()\n//   taskValue: EventEmitter<string> = new EventEmitter<string>();\n//   @Output()\n//   hideValue: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n//   SendNavValue(d: HTMLImageElement) {\n//     let data = d.src;\n//     this.navValue.emit(data.slice(22))\n//      console.log(data);\n\n//   }\n\n//   searchTaskValue: string = '';\n//   searchTask() {\n//     this.taskValue.emit(this.searchTaskValue)\n//   }\n\n\n//   hideDoneTask(d: HTMLInputElement) {\n//     let v: boolean = d.checked;\n//     this.hideValue.emit(v)\n//     console.log(v);\n\n//   }\n// }\nnav = [\n  { circle: \"assets/icons8-white-circle-48.png\", h: \"All\" },\n  { circle: \"assets/icons8-filled-circle-red.png\", h: \"work\" },\n  { circle: \"assets/icons8-filled-circle-green.png\", h: \"entertainment\" },\n  { circle: \"assets/icons8-filled-circle-pink.png\", h: \"family\" },\n  { circle: \"assets/icons8-filled-circle-blue.png\", h: \"study\" }\n]\n\nngOnInit() {\n}\n@Output()\nnavValue: EventEmitter<string> = new EventEmitter<string>();\n@Output()\ntaskValue: EventEmitter<string> = new EventEmitter<string>();\n@Output()\nhideValue: EventEmitter<boolean> = new EventEmitter<boolean>();\n\nSendNavValue(d: HTMLImageElement) {\n  let data = d.src;\n  this.navValue.emit(data.slice(22))\n   console.log(data);\n\n}\n\nsearchTaskValue: string = '';\nsearchTask() {\n  this.taskValue.emit(this.searchTaskValue)\n}\n\n\nhideDoneTask(d: HTMLInputElement) {\n  let v: boolean = d.checked;\n  this.hideValue.emit(v)\n  console.log(v);\n\n}\n}\n\n","<div class=\"d-flex flex-row flex-md-column navmenu1\">\n    <div class=\"gap-2 my-1 d-flex  mx-2 navmenu\" *ngFor=\"let e of nav\" (click)=\"SendNavValue(myVariable)\">\n        <img #myVariable style=\"height:20px;\" src={{e.circle}}>\n        <h3 style=\"font-family:monospace;font-size:14px;\">{{e.h}}</h3>\n    </div>\n\n    <div class=\"\">\n        <div class=\"mx-3 my-3 \">\n            <input type=\"text\" placeholder=\"Search Task\" [(ngModel)]=\"searchTaskValue\" (input)=\"searchTask()\">\n        </div>\n\n        <div class=\"d-flex gap-3 my-3 align-items-center mx-3\">\n            <input #hide type=\"checkbox\" class=\"hide\" id=\"allcheck\" (change)=\"hideDoneTask(hide)\">\n            <label for=\"allcheck\">Hide done tasks</label>\n        </div>\n    </div>\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}